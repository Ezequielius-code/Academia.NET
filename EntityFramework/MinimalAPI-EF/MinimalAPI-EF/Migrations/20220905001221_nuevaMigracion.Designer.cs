// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPI_EF.Context;

#nullable disable

namespace MinimalAPI_EF.Migrations
{
    [DbContext(typeof(TareasContext))]
    [Migration("20220905001221_nuevaMigracion")]
    partial class nuevaMigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MinimalAPI_EF.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorías", (string)null);

                    b.HasData(
                        new
                        {
                            IdCategoria = 111,
                            Descripcion = "Categoría de primer orden",
                            Nombre = "Primera Categoría"
                        },
                        new
                        {
                            IdCategoria = 112,
                            Descripcion = "Categoría de segundo orden",
                            Nombre = "Segunda Categoría"
                        });
                });

            modelBuilder.Entity("MinimalAPI_EF.Models.Tarea", b =>
                {
                    b.Property<int>("IdTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarea"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreTarea")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PrioridadTarea")
                        .HasColumnType("int");

                    b.Property<bool>("Procastinable")
                        .HasColumnType("bit");

                    b.HasKey("IdTarea");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Tareas", (string)null);

                    b.HasData(
                        new
                        {
                            IdTarea = 1151,
                            CategoriaId = 111,
                            Estado = false,
                            FechaDeCreacion = new DateTime(2022, 9, 4, 21, 12, 21, 229, DateTimeKind.Local).AddTicks(2214),
                            NombreTarea = "Pago de servicios públicos",
                            PrioridadTarea = 1,
                            Procastinable = false
                        },
                        new
                        {
                            IdTarea = 2252,
                            CategoriaId = 112,
                            Estado = false,
                            FechaDeCreacion = new DateTime(2022, 9, 4, 21, 12, 21, 229, DateTimeKind.Local).AddTicks(2225),
                            NombreTarea = "Terminar de ver película en Netflix",
                            PrioridadTarea = 2,
                            Procastinable = false
                        });
                });

            modelBuilder.Entity("MinimalAPI_EF.Models.Tarea", b =>
                {
                    b.HasOne("MinimalAPI_EF.Models.Categoria", "Categoria")
                        .WithMany("Tareas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MinimalAPI_EF.Models.Categoria", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
